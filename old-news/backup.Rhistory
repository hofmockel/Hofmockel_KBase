mconfig$setAuth()
WGS.list <-c("PF23-Micro-July-12"="4509405.3",
"PF32-Micro-July-12"="4509401.3",
"PF41-Micro-July-12"="4509399.3",
"PF15-Micro-July-12"="4509398.3")
WGS.colors <-c("PF23-Micro-July-12"="4509405.3",
"PF32-Micro-July-12"="4509401.3",
"PF41-Micro-July-12"="yellow")
"PF15-Micro-July-12"="4509398.3")
WGS.colors <-c("PF23-Micro-July-12"="4509405.3",
"PF32-Micro-July-12"="4509401.3",
"PF41-Micro-July-12"="4509399.3",
"PF15-Micro-July-12"=
asdfa
WGS.colors <-c("PF23-Micro-July-12"="red",
"PF32-Micro-July-12"="blue",
"PF41-Micro-July-12"="green",
"PF15-Micro-July-12"="yellow")
WGS.colors
# get the raw abundance data
WS_July.data <- collection(WS_July.list, count = c (entry = "count", annot = "organism", source = "m5rna", level = "phylum"))
WS_July.data <- collection(WGS.list, count = c (entry = "count", annot = "organism", source = "m5rna", level = "phylum"))
# get the raw abundance data
# get the raw abundance data
WGS.data <- collection(WGS.list, count = c (entry = "count", annot = "organism", source = "m5rna", level = "phylum"))
WGS.data <- collection(4509405.3, count = c (entry = "count", annot = "organism", source = "m5rna", level = "phylum")
WGS.data <- collection(4509405.3, count = c (entry = "count", annot = "organism", source = "m5rna", level = "phylum")
WGS.data <- collection(WGS.list, count = c (entry = "count", annot = "organism", source = "m5rna", level = "phylum"))
WGS.data  <- collection (WGS.list, L1 = c (level = "level1"), L2 = c (level = "level2"), L3 = c (level = "level3"))
mconfig@lastURL()
mconfig$lastURL()
mconfig$setAuth()
WGS.data  <- collection (WGS.list, L1 = c (level = "level1"), L2 = c (level = "level2"), L3 = c (level = "level3"))
WGS.data  <- collection (WGS.list, L1 = c (level = "level1"), L2 = c (level = "level2"), L3 = c (level = "level3"))
WGS.data  <- collection (WGS.list, L1 = c (level = "level1"), L2 = c (level = "level2"), L3 = c (level = "level3"))
WGS.data  <- collection (WGS.list, L1 = c (level = "level1"), L2 = c (level = "level2"), L3 = c (level = "level3"))
WGS.data  <- collection (WGS.list, L3 = c (level = "level3")
WGS.data  <- collection (WGS.list, L3 = c (level = "level3"))
WGS.data  <- collection (WGS.list, L1 = c (level = "level1"))
WGS.data
WGS.data  <- collection (WGS.list, L21 = c (level = "level2"))
WGS.data  <- collection (WGS.list, L2 = c (level = "level2"))
WGS.data  <- collection (WGS.list, L1 = c (level = "level1"), L2 = c (level = "level2"), L3 = c (level = "level3"))
WGS.data  <- collection (WGS.list, L1 = c (level = "level1"), L2 = c (level = "level2"), L3 = c (level = "level3"))
WGS.data  <- collection (WGS.list, L1 = c (level = "level1"), L2 = c (level = "level2"), L3 = c (level = "level3"))
WGS.data  <- collection (WGS.list, L2 = c (level = "level2"))
WGS.data  <- collection (WGS.list, L1 = c (level = "level1"), L2 = c (level = "level2"), L3 = c (level = "level3"))
WGS.data  <- collection (WGS.list, L2 = c (level = "level2"))
views (cc)
views (WGS.data)
cc$L1N <- c (entry = "normed", level = "level1")
WGS.data$L1N <- c (entry = "normed", level = "level1")
WGS.data$L2N <- c (entry = "normed", level = "level2")
d <- as.data.frame (t (WGS.data$L1N))
r <- reshape (d, vary = list (names (d)), dir = "long", ids = rownames (d), times = names(d))
r <- stats::reshape (d, vary = list (names (d)), dir = "long", ids = rownames (d), times = names(d))
names (r) <- c ("function", "count", "sample")
rownames (r) <- NULL
r <- r[c (3,1,2)]
r
library (ggplot2)
ggplot (r) + geom_bar (aes (x = sample, y = count, fill = `function`), position = "fill", stat = "identity") + scale_x_discrete (name = "") + scale_y_continuous ("log-normalized proportional abundance") + opts (title = "Function Representation in Gut Metagenomes", axis.text.x = theme_text (angle = 90, hjust = 1))
pdf()
ggplot (r) + geom_bar (aes (x = sample, y = count, fill = `function`), position = "fill", stat = "identity") + scale_x_discrete (name = "") + scale_y_continuous ("log-normalized proportional abundance") + opts (title = "Function Representation in Gut Metagenomes", axis.text.x = theme_text (angle = 90, hjust = 1))
graphics.off()
d <- as.data.frame (t (WGS.data$L2N))
r <- stats::reshape (d, vary = list (names (d)), dir = "long", ids = rownames (d), times = names(d))
r
history()
?history
savehistory(file="MGRASTnormabundance.Rhistory")
